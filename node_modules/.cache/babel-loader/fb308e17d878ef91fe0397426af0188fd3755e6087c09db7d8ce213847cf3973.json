{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATHARV\\\\Downloads\\\\improved-quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Quiz from \"./components/Quiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.jsonserve.com/Uw5CrX\"; // API might be down\n\nfunction App() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(API_URL).then(response => {\n      if (Array.isArray(response.data) && response.data.length > 0) {\n        setQuizData(response.data);\n      } else {\n        throw new Error(\"Invalid API response\");\n      }\n      setLoading(false);\n    }).catch(() => {\n      console.error(\"API failed. Using mock data.\");\n      setQuizData([{\n        question: \"What is the capital of France?\",\n        options: [{\n          text: \"Paris\",\n          isCorrect: true\n        }, {\n          text: \"London\",\n          isCorrect: false\n        }, {\n          text: \"Berlin\",\n          isCorrect: false\n        }, {\n          text: \"Madrid\",\n          isCorrect: false\n        }]\n      }, {\n        question: \"What is 2 + 2?\",\n        options: [{\n          text: \"3\",\n          isCorrect: false\n        }, {\n          text: \"4\",\n          isCorrect: true\n        }, {\n          text: \"5\",\n          isCorrect: false\n        }, {\n          text: \"6\",\n          isCorrect: false\n        }]\n      }]);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Quiz, {\n      questions: quizData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RjOfvPBFteX0Zmr+Rn2oAx6R6MU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Quiz","jsxDEV","_jsxDEV","API_URL","App","_s","quizData","setQuizData","loading","setLoading","get","then","response","Array","isArray","data","length","Error","catch","console","error","question","options","text","isCorrect","children","fileName","_jsxFileName","lineNumber","columnNumber","questions","_c","$RefreshReg$"],"sources":["C:/Users/ATHARV/Downloads/improved-quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Quiz from \"./components/Quiz\";\n\nconst API_URL = \"https://api.jsonserve.com/Uw5CrX\"; // API might be down\n\nfunction App() {\n  const [quizData, setQuizData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(API_URL)\n      .then(response => {\n        if (Array.isArray(response.data) && response.data.length > 0) {\n          setQuizData(response.data);\n        } else {\n          throw new Error(\"Invalid API response\");\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        console.error(\"API failed. Using mock data.\");\n        setQuizData([\n          {\n            question: \"What is the capital of France?\",\n            options: [\n              { text: \"Paris\", isCorrect: true },\n              { text: \"London\", isCorrect: false },\n              { text: \"Berlin\", isCorrect: false },\n              { text: \"Madrid\", isCorrect: false }\n            ]\n          },\n          {\n            question: \"What is 2 + 2?\",\n            options: [\n              { text: \"3\", isCorrect: false },\n              { text: \"4\", isCorrect: true },\n              { text: \"5\", isCorrect: false },\n              { text: \"6\", isCorrect: false }\n            ]\n          }\n        ]);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Quiz App</h1>\n      {loading ? <p>Loading quiz questions...</p> : <Quiz questions={quizData} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACW,GAAG,CAACP,OAAO,CAAC,CACfQ,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC,IAAIH,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5DT,WAAW,CAACK,QAAQ,CAACG,IAAI,CAAC;MAC5B,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACAR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAAC,MAAM;MACXC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC7Cb,WAAW,CAAC,CACV;QACEc,QAAQ,EAAE,gCAAgC;QAC1CC,OAAO,EAAE,CACP;UAAEC,IAAI,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAK,CAAC,EAClC;UAAED,IAAI,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC,EACpC;UAAED,IAAI,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC,EACpC;UAAED,IAAI,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC;MAExC,CAAC,EACD;QACEH,QAAQ,EAAE,gBAAgB;QAC1BC,OAAO,EAAE,CACP;UAAEC,IAAI,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC/B;UAAED,IAAI,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAK,CAAC,EAC9B;UAAED,IAAI,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC/B;UAAED,IAAI,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC;MAEnC,CAAC,CACF,CAAC;MACFf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBrB,OAAO,gBAAGN,OAAA;MAAAuB,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAG3B,OAAA,CAACF,IAAI;MAAC8B,SAAS,EAAExB;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAACxB,EAAA,CA9CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}