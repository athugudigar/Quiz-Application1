{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATHARV\\\\Downloads\\\\improved-quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Howl } from \"howler\"; // For sound effects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctSound = new Howl({\n  src: [\"/sounds/correct.mp3\"]\n});\nconst wrongSound = new Howl({\n  src: [\"/sounds/wrong.mp3\"]\n});\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleAnswerClick(false);\n    }\n  }, [timeLeft]);\n  if (!questions || questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const handleAnswerClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n      correctSound.play();\n    } else {\n      wrongSound.play();\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(10);\n    } else {\n      setShowResults(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerClick(option.isCorrect),\n        children: option.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"D6apSAvquYRqsra64sTVBDhJxkY=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Howl","jsxDEV","_jsxDEV","correctSound","src","wrongSound","Quiz","questions","_s","currentQuestion","setCurrentQuestion","score","setScore","showResults","setShowResults","timeLeft","setTimeLeft","timer","setTimeout","clearTimeout","handleAnswerClick","length","children","fileName","_jsxFileName","lineNumber","columnNumber","isCorrect","play","question","options","map","option","index","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/ATHARV/Downloads/improved-quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Howl } from \"howler\";  // For sound effects\n\nconst correctSound = new Howl({ src: [\"/sounds/correct.mp3\"] });\nconst wrongSound = new Howl({ src: [\"/sounds/wrong.mp3\"] });\n\nconst Quiz = ({ questions }) => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleAnswerClick(false);\n    }\n  }, [timeLeft]);\n\n  if (!questions || questions.length === 0) {\n    return <p>Loading quiz questions...</p>;\n  }\n\n  const handleAnswerClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n      correctSound.play();\n    } else {\n      wrongSound.play();\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(10);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  return (\n    <div>\n      {showResults ? (\n        <div>\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score}/{questions.length}</p>\n        </div>\n      ) : (\n        <div>\n          <h2>{questions[currentQuestion].question}</h2>\n          <p>Time Left: {timeLeft}s</p>\n          {questions[currentQuestion].options.map((option, index) => (\n            <button key={index} onClick={() => handleAnswerClick(option.isCorrect)}>\n              {option.text}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}